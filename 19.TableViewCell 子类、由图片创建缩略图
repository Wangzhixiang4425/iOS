通过 nib 创建 TableViewCell 子类
    nib 文件file's owner 的类为空
    nib 文件拖入一个 UIView 作为 TableViewCell 的内容视图，将该视图的类改为 TableViewCell 的类名
    为 TableViewCell 子类包含的视图添加约束时，Vertical 方向的约束大小之和不宜为固定值，可将约束的 Relation 属性改为 Greater Than or Equal
    为 TableViewCell 子类添加动作方法
        TableViewCell 作为视图对象不应该直接访问控制器或模型对象，可为其声明一个 Block 属性，然后在控制器中对 Block 赋值
            //TableViewCell.m文件中实现IBAction动作方法
            if (self.actionBlock) {
                self.actionBlock();
            }

通过上下文创建缩略图
 - (void)setThumbnailFromImage:(UIImage *)image{
    CGSize origImageSize = image.size;
        // 缩略图的矩形
    CGRect newRect = CGRectMake(0, 0, 40, 40);
        // 计算出缩放比例
    float ratio = MAX(newRect.size.width / origImageSize.width, newRect.size.height / origImageSize.height);
        // 创建图形上下文
    UIGraphicsBeginImageContextWithOptions(newRect.size, NO, 0.0);
        // 创建一个形状为圆角矩形的 BezierPath 对象
    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:newRect cornerRadius:5.0];
        // 修剪
    [path addClip];
        // 把方法的 Image 参数置于矩形中心
    CGRect projectRect;
    projectRect.size.width = ratio * origImageSize.width;
    projectRect.size.height = ratio * origImageSize.height;
    projectRect.origin.x = (newRect.size.width - projectRect.size.width) / 2.0;
    projectRect.origin.y = (newRect.size.height - projectRect.size.height) / 2.0;
        // 绘图
    [image drawInRect:projectRect];
        // 取图
    UIImage *smallImage = UIGraphicsGetImageFromCurrentImageContext();
    self.thumbnail = smallImage;
        // 清理上下文
    UIGraphicsEndImageContext();
}
